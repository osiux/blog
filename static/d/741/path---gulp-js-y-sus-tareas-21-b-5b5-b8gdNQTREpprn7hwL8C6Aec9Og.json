{"data":{"site":{"siteMetadata":{"title":"Sin Ideas","author":"Eduardo Reveles"}},"markdownRemark":{"id":"94c81138-542b-5223-9c94-b51de190e531","excerpt":"Hace poco les hable de como integrar  Grunt con Font Awesome , y desde entonces me tope con  gulp.js , que hace lo mismo que  Grunt  pero…","html":"<p>Hace poco les hable de como integrar <a href=\"/2013-12-28--usar-font-awesome-con-grunt/\">Grunt con Font Awesome</a>, y desde entonces me tope con <a href=\"http://gulpjs.com/\" target=\"_blank\" rel=\"noopener\">gulp.js</a>, que hace lo mismo que <a href=\"http://gruntjs.com/\" target=\"_blank\" rel=\"noopener\">Grunt</a> pero mas rápido y sencillo :D Integrándolo en un proyecto para probarlo me tope con un dilema. Hay ciertas tareas que solamente quiero correr cuando estoy desarrollando y otras cuando estoy preparando para subir a producción. En grunt lo hacia usando distintas tareas con diferentes opciones cada una:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">grunt<span class=\"token punctuation\">.</span><span class=\"token function\">initConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    sass<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        dev<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                style<span class=\"token punctuation\">:</span> <span class=\"token string\">'expanded'</span><span class=\"token punctuation\">,</span>\n                banner<span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;%= tag.banner %>'</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            files<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'&lt;%= project.publicPath %>/app.css'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;%= project.css %>'</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        dist<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                style<span class=\"token punctuation\">:</span> <span class=\"token string\">'compressed'</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            files<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'&lt;%= project.publicPath %>/app.css'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;%= project.css %>'</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n \n    watch<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \ngrunt<span class=\"token punctuation\">.</span><span class=\"token function\">registerTask</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'sass:dev'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'watch'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \ngrunt<span class=\"token punctuation\">.</span><span class=\"token function\">registerTask</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'sass:dist'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>De este modo tenemos un CSS comprimido (<code class=\"language-text\">grunt build</code>) listo para subir al servidor, y cuando estas desarrollando (<code class=\"language-text\">grunt</code>), el CSS sin comprimir y ademas se queda vigilando por cualquier cambio que se haga para volver a compilarlo. Con  gulp podemos conseguir algo similar usando <a href=\"https://github.com/robrich/gulp-if\" target=\"_blank\" rel=\"noopener\">gulp-if</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> isProduction <span class=\"token operator\">=</span> gutil<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> style<span class=\"token punctuation\">:</span> <span class=\"token string\">'expanded'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isProduction<span class=\"token punctuation\">,</span> <span class=\"token function\">csso</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> gutil<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'watch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'watch'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Es bastante sencillo. Toma de parámetro una condición y una tarea a correr y solamente hay que pasarle un parámetro a la hora de llamarlo: <code class=\"language-text\">gulp build --type production</code>. No está mal, pero si la tarea <strong>build</strong> es la única que corro cuando quiero preparar el código para producción, encontre un modo mas sencillo:</p>\n<p><code class=\"language-text\">var isProduction = gutil.env._[0] === &#39;build&#39;;</code></p>\n<p>¡Y listo! Con solo eso, me basta correr <code class=\"language-text\">gulp</code> o <code class=\"language-text\">gulp build</code> para diferenciar cuando es desarrollo y producción, sin parámetros extra. Al final queda algo similar a esto:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> gulp        <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sass        <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-sass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    gulpif      <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-if'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    csso        <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-csso'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    gutil       <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-util'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> isProduction <span class=\"token operator\">=</span> gutil<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> style<span class=\"token punctuation\">:</span> <span class=\"token string\">'expanded'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isProduction<span class=\"token punctuation\">,</span> <span class=\"token function\">csso</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> gutil<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'watch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'watch'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Espero les sirva :)</p>","frontmatter":{"title":"gulp.js y sus tareas","date":"March 05, 2014"}}},"pageContext":{"slug":"gulp-js-y-sus-tareas","previous":{"fields":{"slug":"cafe-pendiente"},"frontmatter":{"title":"Café Pendiente"}},"next":{"fields":{"slug":"wordpress-bootstrap-3-e-ie8"},"frontmatter":{"title":"Wordpress, Bootstrap 3 e IE8"}}}}